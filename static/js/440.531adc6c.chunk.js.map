{"version":3,"file":"static/js/440.531adc6c.chunk.js","mappings":"sKACA,MAA0B,wBAA1B,EAA8D,0B,SCCvD,SAASA,IACb,OACG,gBAAKC,UAAWC,EAAhB,UACG,iBAAKD,UAAWC,EAAhB,WACM,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,uBAId,C,oHCdYC,EAAa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAC1B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACG,+BACG,kBAAMC,SARS,SAAAC,GAClBA,EAAEC,iBACFN,EAA8B,KAAbE,EAAgB,CAACK,MAAOL,EAAWM,QAAS,CAAC,GAC9DL,EAAc,GAChB,EAIK,WACG,kBACGM,SAfU,SAAAJ,GACnB,IAAQK,EAAUL,EAAEM,OAAZD,MACRP,EAAcO,EAChB,EAaWE,KAAK,OACLC,KAAK,cACLH,MAAOR,EACPY,YAAY,sBAEf,2CAIX,E,SC5BYC,EAAgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MAEjB,OACG,iCACG,4CACA,wBACIF,EAAOG,KAAI,SAAAC,GAAK,OACd,yBACG,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAKP,GAA/C,SACIG,EAAMK,SAFJL,EAAME,GADD,QAW5B,E,oCCnBYI,EAAc,mCAAG,WAAMC,GAAN,gFACrBC,EAAS,CACZC,IAAI,gBACJC,QAAS,+BACTH,OAAO,CACJI,QAAS,mCACTxB,MAAOoB,IANc,UASLK,EAAAA,EAAAA,GAAMJ,GATD,cASrBK,EATqB,yBAUpBA,EAASC,KAAKC,SAVM,2CAAH,sDCkD3B,EA5CoB,WAAO,IAAD,EACvB,GAA4BlC,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeoB,EAAf,KACA,GAAkCnC,EAAAA,EAAAA,WAAS,GAA3C,eAAOoC,EAAP,KAAkBC,EAAlB,KACA,GAA0BrC,EAAAA,EAAAA,UAAS,MAAnC,eAAOsC,EAAP,KAAcC,EAAd,KACA,GAAwCvC,EAAAA,EAAAA,WAAS,GAAjD,eAAOwC,EAAP,KAAqBC,EAArB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqB5C,EAArB,KACM2B,EAAM,UAAGiB,EAAaC,IAAI,gBAApB,QAAgC,GAiB5C,OAfAC,EAAAA,EAAAA,YAAU,WACFnB,IACLe,GAAgB,GAChBF,EAAS,mBACTF,GAAa,GACbZ,EAAeC,GACXoB,MAAK,SAAAd,GACHG,EAAUH,GACc,IAApBA,EAASe,QAAeN,GAAgB,EAC9C,IACAO,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAMW,QAAnB,IACXC,SAAQ,WACNb,GAAa,EACf,IACN,GAAE,CAACX,KAED,iCACG,8BACG,SAAC5B,EAAD,CAAYC,gBAAiBA,MAG/BuC,IAAS,eAAGzC,MAAO,CAAEsD,WAAY,QAAxB,2CAAiEb,KAE1EvB,EAAOgC,OAAS,IACd,8BACG,SAACjC,EAAD,CAAeC,OAAQA,MAG5ByB,IACE,iFAEFJ,IAAa,SAACzC,EAAA,EAAD,MAGtB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/SearchForm/SearchForm.jsx","components/SearchResaults/SearchResaults.jsx","services/getMovieSearch.js","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Loader_overlay__vojGq\",\"ldsRoller\":\"Loader_ldsRoller__5cE1k\"};","import style from './Loader.module.css'\r\n\r\nexport function Loader () {\r\n   return(\r\n      <div className={style.overlay}>\r\n         <div className={style.ldsRoller}>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n         </div>\r\n      </div>\r\n   );\r\n};","import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SearchForm = ({ setSearchParams }) => {\r\n   const [movieInput, setMovieInput] = useState('');\r\n\r\n   const onInputChange = e => {\r\n      const { value } = e.target;\r\n      setMovieInput(value);\r\n   };\r\n\r\n   const onFormSubmit = e =>{\r\n      e.preventDefault();\r\n      setSearchParams (movieInput!==\"\"?{query: movieInput.trim() }:{});\r\n      setMovieInput('');\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form onSubmit={onFormSubmit}>\r\n            <input\r\n               onChange={onInputChange}\r\n               type=\"text\"\r\n               name=\"searchInput\"\r\n               value={movieInput}\r\n               placeholder=\"Enter movie name\"\r\n            ></input>\r\n            <button>Search</button>\r\n         </form>\r\n      </>\r\n   )\r\n}\r\n\r\nSearchForm.propTypes = {\r\n   setSearchParams: PropTypes.func.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nexport const SearchResults = ({ movies }) => {\r\n   const location = useLocation();\r\n\r\n   return (\r\n      <>\r\n         <h2>Search results</h2>\r\n         <ul>\r\n            {movies.map(movie=> (\r\n               <li key={movie.id}>\r\n                  <Link to={`/movies/${movie.id}`} state={{ from:location}}>\r\n                     {movie.title}\r\n                  </Link>\r\n               </li>\r\n            ))}\r\n         </ul>\r\n      </>\r\n   )\r\n\r\n}\r\nSearchResults.propTypes = {\r\n   movies: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n};","import axios from \"axios\";\r\n\r\nexport const getMovieSearch = async params => {\r\n   const config = {\r\n      url: `/search/movie`,\r\n      baseURL: 'https://api.themoviedb.org/3',\r\n      params:{\r\n         api_key: '0193b403931965590ec3af04161f2ca2',\r\n         query: params,\r\n      },\r\n   };\r\n   const response= await axios(config);\r\n   return response.data.results;\r\n};","import { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport { Loader } from \"components/Loader/Loader\";\r\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\r\nimport { SearchResults } from \"components/SearchResaults/SearchResaults\";\r\nimport { getMovieSearch } from \"services/getMovieSearch\";\r\n\r\n const MoviesPage = () => {\r\n   const [movies, setMovies] = useState([]);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n   const [nothingFound, setNothingFound] = useState(false);\r\n\r\n   const [searchParams, setSearchParams] = useSearchParams();\r\n   const params = searchParams.get('query') ?? '';\r\n\r\n   useEffect(() => {\r\n      if (!params) return;\r\n      setNothingFound(false);\r\n      setError('Oops some error');\r\n      setIsLoading(true);\r\n      getMovieSearch(params)\r\n         .then(response => {\r\n            setMovies(response);\r\n            if (response.length === 0 ) setNothingFound(true);\r\n         })\r\n         .catch(error => setError(error.message))\r\n         .finally(() => {\r\n            setIsLoading(false);\r\n         });\r\n   }, [params]);\r\n   return (\r\n      <>\r\n         <section>\r\n            <SearchForm setSearchParams={setSearchParams} />\r\n         </section>\r\n\r\n         {error && <p style={{ marginLeft: '50px' }}>Oops, some error whith movie :{error}</p> }\r\n\r\n         {movies.length > 0 && (\r\n            <section>\r\n               <SearchResults movies={movies}></SearchResults>\r\n            </section>\r\n         )}\r\n         {nothingFound && (\r\n            <p >Oops...Nothing was found.Try to enter something else.</p>\r\n         )}\r\n         {isLoading && <Loader />}\r\n      </>\r\n   );\r\n};\r\nexport default MoviesPage;"],"names":["Loader","className","style","SearchForm","setSearchParams","useState","movieInput","setMovieInput","onSubmit","e","preventDefault","query","trim","onChange","value","target","type","name","placeholder","SearchResults","movies","location","useLocation","map","movie","to","id","state","from","title","getMovieSearch","params","config","url","baseURL","api_key","axios","response","data","results","setMovies","isLoading","setIsLoading","error","setError","nothingFound","setNothingFound","useSearchParams","searchParams","get","useEffect","then","length","catch","message","finally","marginLeft"],"sourceRoot":""}