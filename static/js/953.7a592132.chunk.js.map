{"version":3,"file":"static/js/953.7a592132.chunk.js","mappings":"sKACA,MAA0B,wBAA1B,EAA8D,0B,SCCvD,SAASA,IACb,OACG,gBAAKC,UAAWC,EAAhB,UACG,iBAAKD,UAAWC,EAAhB,WACM,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,uBAId,C,+ICfYC,EAAe,mCAAG,WAAMC,GAAN,gFACtBC,EAAS,CACZC,IAAI,UAAD,OAAYF,EAAZ,YACHG,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCALc,UAQLC,EAAAA,EAAAA,GAAML,GARD,cAQtBM,EARsB,yBASrBA,EAASC,KAAKC,MATO,2CAAH,sD,kBCAfC,EAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,QAC3B,OACG,+BACG,wBACIA,GAAWA,EAAQC,KAAI,YAA0C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UAC/C,OACG,2BACG,gBAAKC,IAAuB,OAAjBH,EACTI,EADS,0CAE0BJ,GAExCK,IAAKJ,KAEP,uBAAIA,KACJ,uCAAeC,OARJH,EAWd,OAIZ,ECWD,EA3Ba,WACV,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEOzB,GAAW0B,EAAAA,EAAAA,MAAX1B,QAYP,OAXA2B,EAAAA,EAAAA,YAAU,WACPJ,GAAa,GACbxB,EAAgBC,GACZ4B,MAAK,SAAArB,GACHc,EAAWd,EACb,IACAsB,OAAM,SAAAL,GAAK,OAAIC,EAASD,EAAMM,QAAnB,IACXC,SAAQ,WACNR,GAAa,EACf,GACN,GAAG,CAACvB,KAEF,gCACIsB,IAAa,SAAC1B,EAAA,EAAD,IACb4B,IAAS,+CAAuBA,MACjC,8BACG,SAACd,EAAD,CAAaC,QAASA,QAIjC,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","services/getMovieCredits.js","components/CastGallery/CastGallery.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Loader_overlay__vojGq\",\"ldsRoller\":\"Loader_ldsRoller__5cE1k\"};","import style from './Loader.module.css'\r\n\r\nexport function Loader () {\r\n   return(\r\n      <div className={style.overlay}>\r\n         <div className={style.ldsRoller}>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n         </div>\r\n      </div>\r\n   );\r\n};","import axios from \"axios\";\r\n\r\nexport const getMovieCredits = async movieId => {\r\n   const config = {\r\n      url: `/movie/${movieId}/credits`,\r\n      baseURL: 'https://api.themoviedb.org/3',\r\n      params: {\r\n        api_key: '0193b403931965590ec3af04161f2ca2',\r\n      },\r\n   };\r\n   const response = await axios(config);\r\n   return response.data.cast;\r\n};","import imgNotFound from '../../images/imgNotFound.png'\r\n\r\nexport const CastGallery = ({ credits })=> {\r\n   return (\r\n      <>\r\n         <ul>\r\n            {credits && credits.map(({id, profile_path, name, character}) => {\r\n               return (\r\n                  <li key={id}>\r\n                     <img src={ profile_path === null \r\n                     ? imgNotFound\r\n                     : `https://image.tmdb.org/t/p/w500/${profile_path}`\r\n                  }\r\n                  alt={name}\r\n                />\r\n                <p>{name}</p>\r\n                <p>Character: {character}</p>\r\n                  </li>\r\n               )\r\n            })}\r\n         </ul>\r\n      </>\r\n   );\r\n};","import { Loader } from \"components/Loader/Loader\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getMovieCredits } from \"services/getMovieCredits\";\r\nimport { CastGallery } from \"components/CastGallery/CastGallery\";\r\n\r\nconst Cast = () => {\r\n   const [credits, setCredits] = useState([]);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n\r\n   const {movieId} = useParams();\r\n   useEffect(() => {\r\n      setIsLoading(true);\r\n      getMovieCredits(movieId)\r\n         .then(response => {\r\n            setCredits(response);\r\n         })\r\n         .catch(error => setError(error.message))\r\n         .finally(() => {\r\n            setIsLoading(false);\r\n         });\r\n   } , [movieId]);\r\n   return (\r\n      <>\r\n         {isLoading && <Loader/>}\r\n         {error && <p>Oops, some error : {error}</p>}\r\n         <section>\r\n            <CastGallery credits={credits}/>\r\n         </section>\r\n      </>\r\n   )\r\n};\r\nexport default Cast;"],"names":["Loader","className","style","getMovieCredits","movieId","config","url","baseURL","params","api_key","axios","response","data","cast","CastGallery","credits","map","id","profile_path","name","character","src","imgNotFound","alt","useState","setCredits","isLoading","setIsLoading","error","setError","useParams","useEffect","then","catch","message","finally"],"sourceRoot":""}